// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id             String          @id @default(cuid())
    name           String?
    email          String?         @unique
    emailVerified  DateTime?
    image          String?
    role           String          @default("user")
    accounts       Account[]
    sessions       Session[]
    craftingOrders CraftingOrder[]
}

model CraftingOrder {
    id        String   @id @default(cuid())
    status    Status   @default(PENDING)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    quantity  Int
    details   String?
    Enchants  Enchants?
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String
    item      Item     @relation(fields: [itemsId], references: [id])
    itemsId   Int
    @@index([userId])
}

model Item {
    id             Int             @id @default(autoincrement())
    name           String
    Image          String
    description    String
    quantity       Int             @default(1)
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    weight         Float           @default(0)
    slots          Int             @default(0)
    refineable     Boolean         @default(false)
    tradeable      Boolean         @default(false)
    craftable      Boolean         @default(false)
    Stats          ItemStats?      @relation(fields: [statsId], references: [id])
    statsId        Int?
    craftingOrders CraftingOrder[]

    @@index([statsId])
}

model ItemStats {
    id   Int    @id @default(autoincrement())
    str  Int    @default(0)
    agi  Int    @default(0)
    vit  Int    @default(0)
    int  Int    @default(0)
    dex  Int    @default(0)
    luk  Int    @default(0)
    atk  Int    @default(0)
    matk Int    @default(0)
    def  Int    @default(0)
    mdef Int    @default(0)
    hit  Int    @default(0)
    flee Int    @default(0)
    crit Int    @default(0)
    aspd Int    @default(0)
    hp   Int    @default(0)
    sp   Int    @default(0)
    Item Item[]
}

enum Enchants {
    STR
    AGI
    VIT
    INT
    DEX
    LUK
    ATK
    MATK
    DEF
    MDEF
    HIT
    FLEE
    CRIT
    ASPD
    HP
    SP
}

enum Status {
    PENDING
    IN_PROGRESS
    COMPLETED
    CANCELLED
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
